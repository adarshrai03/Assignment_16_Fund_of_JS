In JavaScript, operators are categorized based on the number of operands they work with. Here's a differentiation between unary, binary, and ternary operators along with examples for each:

1. Unary Operators:

Unary operators work with a single operand.
Example:
let x = 5;

// Unary negation (changes the sign)
let negation = -x;  // negation is -5

// Unary plus (rarely used, but it doesn't change the value)
let positive = +x;  // positive is 5

// Pre-increment
let preIncrement = ++x;  // preIncrement is 6, and x is 6

// Pre-decrement
let preDecrement = --x;  // preDecrement is 5, and x is 5

2. Binary Operators:

Binary operators work with two operands.
Examples:
let a = 5;
let b = 3;

// Addition
let sum = a + b;  // sum is 8

// Subtraction
let difference = a - b;  // difference is 2

// Multiplication
let product = a * b;  // product is 15

// Division
let quotient = a / b;  // quotient is 1.666...

3. Ternary Operator:

The ternary operator is the only ternary operator in JavaScript, and it works with three operands. It's a shorthand for an if-else statement.
Syntax: condition ? expression_if_true : expression_if_false
Example:
let age = 20;

// Ternary operator to determine eligibility
let eligibility = (age >= 18) ? 'Eligible' : 'Not Eligible';

// The above line is equivalent to the following if-else statement:
/*
if (age >= 18) {
  eligibility = 'Eligible';
} else {
  eligibility = 'Not Eligible';
}
*/
